require('dotenv').config();
const express = require('express');
const fetch = require('node-fetch');
const cors = require('cors');
const app = express();
const PORT = process.env.PORT || 3001;

app.use(cors());
app.use(express.json());

app.post('/analyze', async (req, res) => {
  const { frames, textBlocks } = req.body;
  const apiKey = process.env.OPENAI_API_KEY;
  if (!apiKey) return res.status(500).json({ error: 'API key missing' });

  try {
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${apiKey}`
      },
      body: JSON.stringify({
        model: 'gpt-4',
        messages: [
          {
            role: 'system',
            content: 'You are a user‑experience and ethical‑design expert. You will receive UI content extracted from selected Figma frames (including frame names and all visible text). Your task is to identify any deceptive (dark) patterns and explain them thoroughly.'
          },
          {
            role: 'user',
            content:
              `Frame Names:\n${frames.map((f,i) => `${i+1}. ${f}`).join("\n")}\n\n` +
              `Extracted Text:\n${textBlocks.join("\n\n")}\n\n` +
              // Output instructions:
              `Your output must start with:\n` +
              `1. Confidence Score (0–10): <score>\n` +
              `2. Detected Patterns: <comma-separated list of all detected deceptive patterns, or "No deceptive patterns detected">\n` +
              `3. Disclaimer: This analysis is generated by AI and includes a confidence score from 0–10 (10 = highest confidence) reflecting certainty based on the given information. It is important to still make your own judgement because the AI can be wrong.\n\n` +
              `Then, provide:\n` +
              `- For each detected pattern: name, frame reference, and evidence (which UI elements are involved and why).\n` +
              `- UX Path & Wording Analysis: Assess navigation, button placement, labels, and wording. Highlight anything confusing or misleading.\n` +
              `- Prevention & Ethical Alternatives: Suggest user-centered redesigns for each pattern, explaining how they improve trust and transparency.\n\n` +
              `If no deceptive patterns are found, state this clearly and explain why. Note any continuity-based deception across screenshots if present.\n`
          }
        ],
        temperature: 0.3
      })
    });
    const data = await response.json();
    const text = (data.choices && data.choices[0] && data.choices[0].message && data.choices[0].message.content) || '⚠️ No response.';
    res.json({ result: text });
  } catch (err) {
    console.error('OpenAI error:', err);
    res.status(500).json({ error: 'Error contacting OpenAI.' });
  }
});

app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});
